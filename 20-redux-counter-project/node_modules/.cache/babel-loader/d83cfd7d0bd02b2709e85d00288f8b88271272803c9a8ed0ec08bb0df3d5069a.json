{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport authSliceReducer from \"./auth-slice\";\nimport counterSliceReducer from \"./counter-slice\";\n\n// without redux toolkit\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"INCREMENT\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"INCREASE\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"DECREMENT\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"TOGGLE\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n\n// for one reducer\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore({\n//     reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\n// });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSliceReducer,\n    auth: authSliceReducer\n  }\n});\n\n// export const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","authSliceReducer","counterSliceReducer","store","reducer","counter","auth","authActions","authSlice","actions"],"sources":["D:/reactPractice/20-redux-counter-project/src/Store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport authSliceReducer from \"./auth-slice\";\r\nimport counterSliceReducer from \"./counter-slice\";\r\n\r\n// without redux toolkit\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"INCREMENT\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"INCREASE\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"DECREMENT\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"TOGGLE\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// for one reducer\r\n// const store = createStore(counterSlice.reducer);\r\n\r\n// const store = configureStore({\r\n//     reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\r\n// });\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterSliceReducer, auth: authSliceReducer }\r\n});\r\n\r\n// export const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,OAAOC,gBAAgB,MAAM,cAAc;AAC3C,OAAOC,mBAAmB,MAAM,iBAAiB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IAAEC,OAAO,EAAEH,mBAAmB;IAAEI,IAAI,EAAEL;EAAiB;AACpE,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,WAAW,GAAGC,SAAS,CAACC,OAAO;AAE5C,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}