{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\22-routing-project\\\\frontend\\\\src\\\\components\\\\RootElement.js\",\n  _s = $RefreshSig$();\nimport { Outlet, useNavigation } from \"react-router-dom\";\nimport MainNavigation from \"./MainNavigation\";\n\n//useNavigation: to check the current route transitions state.So, to find out if a transition has been initiated and we're currently still waiting for data to arrive, or if we're done.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RouterElement() {\n  _s();\n  const navigation = useNavigation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RouterElement, \"I2WaJhUM5KV32aS1+j3KKeVsgyA=\", false, function () {\n  return [useNavigation];\n});\n_c = RouterElement;\nexport default RouterElement;\nvar _c;\n$RefreshReg$(_c, \"RouterElement\");","map":{"version":3,"names":["Outlet","useNavigation","MainNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","RouterElement","_s","navigation","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reactPractice/22-routing-project/frontend/src/components/RootElement.js"],"sourcesContent":["import { Outlet, useNavigation } from \"react-router-dom\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\n//useNavigation: to check the current route transitions state.So, to find out if a transition has been initiated and we're currently still waiting for data to arrive, or if we're done.\r\n\r\nfunction RouterElement() {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main>\r\n        {/* this define where content of child route will be loaded */}\r\n        <Outlet />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RouterElement;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AACxD,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,UAAU,GAAGR,aAAa,CAAC,CAAC;EAClC,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACF,cAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBV,OAAA;MAAAM,QAAA,eAEEN,OAAA,CAACJ,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACP,CAAC;AAEP;AAACN,EAAA,CAXQD,aAAa;EAAA,QACDN,aAAa;AAAA;AAAAc,EAAA,GADzBR,aAAa;AAatB,eAAeA,aAAa;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}